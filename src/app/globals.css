@import "tailwindcss";
@plugin "@tailwindcss/typography";

@theme inline {
  --font-family-caryon: var(--font-family-caryon);
  --font-family-mono: var(--font-family-mono);
  --font-family-sans: var(--font-family-sans);
}

.prose {
  font-size: var(--text-sm);
  line-height: calc(var(--spacing) * 7);

  :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 7);
  }

  :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-decoration: none;
  }

  :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-7xl);
    font-weight: 400;
    margin-bottom: 0;
  }

  :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-transform: uppercase;
  }

  :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    font-size: var(--text-base);
    margin-top: 0;
    margin-bottom: 4px;
  }

  :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  :where(ul, ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: calc(var(--spacing) * 7);
  }

  :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-block: 0;
  }

  :where(.prose > ul > li > p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
    margin-bottom: calc(var(--spacing) * 7);
  }

  :where(ul > li):not(
      :where([class~="not-prose"], [class~="not-prose"] *)
    )::marker {
    color: inherit;
  }
}

.a4__lines {
  background-image: repeating-linear-gradient(
    transparent 0px,
    transparent 27px,
    rgba(0, 0, 0, 0.2) 28px
  );
}
